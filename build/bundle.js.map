{"version":3,"sources":["webpack:///webpack/bootstrap 4ba8cb36c1ab7e24109f","webpack:///./js/app.js","webpack:///./js/config.js","webpack:///./js/creds.js","webpack:///./js/dom.js","webpack:///./js/image.js","webpack:///./js/get.js","webpack:///./js/templates/header.js","webpack:///./js/templates/get-image-button.js","webpack:///./js/templates/image.js","webpack:///./js/templates/image-cell.js","webpack:///./js/templates/lightbox.js","webpack:///./js/templates/lightbox-element.js","webpack:///./js/templates/lightbox-title.js","webpack:///./js/views/lightbox.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,gBAAgB;;AAE3B;AACA,yB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yE;AACA;AACA;AACA;;AAEA;;AAEA,c;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,2C;AACA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;;;;;;AC/KA;AACA;AACA;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG,E;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;ACzCA;;AAEA;AACA;AACA;AACA,yB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,c;AACA;;AAEA;;;;;;;ACfA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;;;;;;;;ACDA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACdA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,qE;AACA;AACA;AACA;;AAEA;;AAEA,c;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./build/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4ba8cb36c1ab7e24109f\n **/","var config = require('./config.js');\nvar creds = require('./creds.js');\nvar el = require('./dom.js').el;\nvar append = require('./dom.js').append;\nvar remove = require('./dom.js').remove;\nvar getWidth = require('./dom.js').getWidth;\nvar Image = require('./image.js');\nvar get = require('./get.js');\n\n// the app has:\n// views (v) which will actually manipulate the DOM\n// templates (t) which return DOM nodes (without touching the DOM itself)\n// and images (which I like to be able to get at through the app object)\n// it's also got an init method that fires when the body has loaded\nvar app = {images:[], v: {}, t: {}};\n\n// executed on body.onload to create the initial DOM tree and fetch images\napp.init = function () { \n  app.v.layout();\n  getImages();\n  getImages();\n  getImages();\n};\n\n// returns the header DOM node with getImage plus button\napp.t.header = require('./templates/header.js');\n\n// returns the div where all our image cells will be appended\napp.t.imageCellSection = function () {\n  return el('div', 'image-cell-section');\n};\n\n// returns the getImage plus button for the header\napp.t.getImageButton = function () {\n  var button = el('span', 'header-plus');\n  button.textContent = '+';\n  button.addEventListener('click', getImages);\n  return button;\n};\n\n// takes an src and (optional) id, and returns an img DOM node\n// worth noting: that src can be a base64 encoded image, or an image url\napp.t.image = require('./templates/image.js');\n\n// takes an image DOM node and title string\n// and returns the 'cell' or 'card' that the image will be injected into\napp.t.imageCell = require('./templates/image-cell.js');\n\napp.t.lightbox = require('./templates/lightbox.js');\n\n// takes a class name, text, and a callback\n// and returns a clickable div DOM node with that text and class added\napp.t.lightboxElement = require('./templates/lightbox-element.js');\n\n// takes a string and returns the title paragraph tag DOM node\napp.t.lightboxTitle = require('./templates/lightbox-title.js');\n\n// adds the header and image cell section to document.body - you can read\napp.v.layout = function () {\n  append(document.body, app.t.header(), app.t.imageCellSection());\n};\n\n// adds images 'cells' to the 'images section'\napp.v.addImage = function (image) {\n  var imageNode = app.t.image(image.src);\n  imageNode.addEventListener('click', function () {\n    app.v.lightbox(app.t.image(image.src, image.id), image.title, app.images);\n  });\n\n  append(\n      document.getElementsByClassName('image-cell-section')[0],\n      app.t.imageCell(imageNode, image.title)\n      );\n};\n\napp.v.lightbox = require('./views/lightbox.js');\n/*\n// creates the lightbox DOM nodes and appends them to document.body\n// takes advantage of JS closures to handle adding and removing events\napp.v.lightbox = function (imageNode, imageTitle, imageCollection) {\n  var shadowbox = app.t.lightboxElement('shadowbox', '', closeLightbox); \n  var lightbox = app.t.lightbox(imageTitle, imageNode, closeLightbox);\n  var backButton = app.t.lightboxElement('lightbox-back-button', '<', regress);\n  var forwardButton = app.t.lightboxElement('lightbox-forward-button', '>', progress);\n\n  append(document.body, shadowbox, backButton, forwardButton, lightbox);\n\n  position(); \n  window.onresize = position;\n  window.addEventListener('keydown', navigateOnKeyDown);\n\n  // repositions the lightbox and forward and back buttons\n  // needed to keep things centered and responsive\n  function position () {\n    var lightboxWidth = getWidth(lightbox);\n    var windowWidth = getWidth(document.body);\n    var backButtonWidth = getWidth(backButton);\n    var forwardButtonWidth = getWidth(forwardButton);\n    var margin = 20;\n\n    var lightboxLeft = (windowWidth - lightboxWidth) / 2;\n    lightbox.style.left = lightboxLeft;\n    backButton.style.left = lightboxLeft - backButtonWidth - 3 * margin;\n    forwardButton.style.left = lightboxLeft + lightboxWidth + margin;\n  };\n\n  // for easy keyboard naviation using the arrow keys\n  function navigateOnKeyDown (ev) {\n    var keys = {rightArrow: 39, leftArrow: 37};\n    if (ev.which === keys.rightArrow) {\n      progress();\n    } else if (ev.which === keys.leftArrow) {\n      regress();\n    }\n  };\n\n  // steps teh lightbox forwards in the collection\n  function progress  () {\n    for (var i = 0; i < imageCollection.length; i++) {\n      if (imageNode.id === imageCollection[i].id && i < imageCollection.length - 1) {\n        closeLightbox();\n        var image = imageCollection[i + 1];\n        app.v.lightbox(\n            app.t.image(image.src, image.id),\n            image.title,\n            imageCollection\n            );\n        return;\n      }\n    }\n\n    closeLightbox();\n  };\n\n  // steps the lightbox backwards in the collection\n  function regress () {\n    for (var i = 0; i < imageCollection.length; i++) {\n      if (imageNode.id === imageCollection[i].id && i > 0) {\n        closeLightbox();\n        var image = imageCollection[i - 1];\n        app.v.lightbox(app.t.image(image.src, image.id), image.title, imageCollection);\n        return;\n      }\n    }\n\n    closeLightbox();\n  };\n\n  // removes the lightbox-associated DOM nodes and removes the keydown listener\n  function closeLightbox () {\n    window.removeEventListener('keydown', navigateOnKeyDown);\n    remove(lightbox, backButton, forwardButton, shadowbox);\n  };\n};\n*/\n\n\n// takes an int to request an icon from the server of pixelsWide width\n// right now the server only returns a single image as a base64 encoded string\n// but it could be trivially changed to return image urls, and lots of them.\nfunction getImages (pixelsWide) {\n  var url = config.imagesURL + (pixelsWide || 500);\n\n  var callback = function (e) {\n    var images = e.target.response.images; \n    for (var i = 0; i < images.length; i++) {\n      var image = new Image(images[i]);\n      app.images.push(image);\n      app.v.addImage(image);\n    }\n  };\n\n  get(url, callback);\n};\n\n\nwindow.app = app;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/app.js\n ** module id = 0\n ** module chunks = 0\n **/","\nmodule.exports = {\n  imagesURL: 'http://104.131.154.14:3000/'\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/config.js\n ** module id = 1\n ** module chunks = 0\n **/","\n// credentials for the API - I built the thing\n// so I'm not too worried about what'll happen with these on Github\nvar creds = {\n  appID: '1541c5a2-b78d-48d0-9b41-1be7072d7c1b',\n  jsKey: '6b0ef299-e3ce-479e-bc1d-e1b62df2c5ba'\n};\n\nmodule.exports = creds;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/creds.js\n ** module id = 2\n ** module chunks = 0\n **/","\nvar dom = {\n  // takes a tag and any number of classes to add as extra arguments\n  // returns a DOM node of that tag type with those classes\n  el: function (tag) {\n    var el = document.createElement(tag || 'div');\n    if (arguments.length > 1) {\n      for (var i = 1; i < arguments.length; i++) {\n        el.classList.add(arguments[i]);\n      }\n    }\n    return el;\n  },\n\n  // takes a target DOM node and any number of additional DOM nodes\n  // all DOM nodes after the first will be appended to the target\n  append: function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      target.appendChild(arguments[i]);\n    }\n  },\n\n  // removes all DOM nodes passed as arguments\n  remove: function () {\n    if (!arguments.length) return;\n    for (var i = 0; i < arguments.length; i++) {\n      var node = arguments[i];\n      node.parentNode.removeChild(node);\n    }\n  },\n\n  // takes a DOM node and returns it's width in pixels\n  getWidth: function (node) {\n    return parseInt(window.getComputedStyle(node).width, 10);\n  }\n\n};\n\nmodule.exports = dom;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/dom.js\n ** module id = 3\n ** module chunks = 0\n **/","\n// like underscore's sample, takes an array or string\n// and returns a randomly selected element from the collection\nfunction sample (arrayOrString) {\n  return arrayOrString[Math.floor(Math.random() * arrayOrString.length)];\n};\n\n// returns a uuid string\n// taken from stackoverflow (http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript) \nfunction uuid () {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n    return v.toString(16);\n  }); \n};\n\n// returns a fake title for our images\nfunction fakeTitle () {\n  var consonants = 'bcdfghjklmnpqrstvwxyz';\n  var vowels = 'aeiou';\n  var patterns = 'CVC VC CV CVVCV CVCV VCVVC CVCCVC';\n\n  var n = 1 + Math.floor(Math.random() * 3);\n  var words = [];\n  for (var i = 0; i < n; i++) {\n    words.push(sample(patterns.split(' ')));\n  }\n\n  return words.join(' ').replace(/[CV]/g, function(x) {\n    return x === 'C' ? sample(consonants) : sample(vowels);\n  });\n};\n\n// Constructor for image instances\nfunction Image (src) {\n  this.src = src;\n  this.id = uuid();\n  this.title = fakeTitle();\n};\n\n\nmodule.exports = Image;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/image.js\n ** module id = 4\n ** module chunks = 0\n **/","var creds = require('./creds.js');\n\n// xhr GET with authorization set to our credentials\nfunction get (url, callback) {\n  var req = new XMLHttpRequest();\n  req.onload = callback; \n  req.open('GET', url, true);\n  req.responseType = 'json';\n  req.setRequestHeader(\n      'Authorization',\n      'Basic ' + btoa(creds.appID + ':' + creds.jsKey)\n      );\n  req.send();    \n};\n\nmodule.exports = get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/get.js\n ** module id = 5\n ** module chunks = 0\n **/","var el = require('../dom.js').el;\nvar getImageButton = require('./get-image-button');\n\nmodule.exports = function () {\n  var header = el('div', 'header');\n  header.textContent = 'HTML Zero';\n  header.appendChild(app.t.getImageButton());\n  return header;\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/templates/header.js\n ** module id = 6\n ** module chunks = 0\n **/","var el = require('../dom.js').el;\n// returns the getImage plus button for the header\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/templates/get-image-button.js\n ** module id = 7\n ** module chunks = 0\n **/","var el = require('../dom.js').el;\n\nmodule.exports = function (src, id) {\n  var img = el('img');\n  img.setAttribute('id', id);\n  img.setAttribute('src', src);\n  return img;\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/templates/image.js\n ** module id = 8\n ** module chunks = 0\n **/","var el = require('../dom.js').el;\n\nmodule.exports = function (imageNode, imageTitle) {\n  var cell = el('div', 'image-cell');\n  cell.appendChild(imageNode);\n\n  var title = el('p', 'image-title');\n  title.textContent = imageTitle || 'Lightbox Demo Title';\n  cell.appendChild(title);\n  return cell;\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/templates/image-cell.js\n ** module id = 9\n ** module chunks = 0\n **/","var append = require('../dom.js').append;\nvar el = require('../dom.js').el;\n\nvar t = {\n  lightboxElement: require('./lightbox-element.js'),\n  lightboxTitle: require('./lightbox-title.js')\n};\n\nmodule.exports = function (imageTitle, imageNode, closeCallback) {\n  var lightbox = el('div', 'lightbox');\n  var close = t.lightboxElement('lightbox-close', 'X', closeCallback);\n  var title = t.lightboxTitle(imageTitle);\n  append(lightbox, close, imageNode, title);\n  return lightbox;\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/templates/lightbox.js\n ** module id = 10\n ** module chunks = 0\n **/","var el = require('../dom.js').el;\n\nmodule.exports = function(className, textContent, callback) {\n  var button = el('div', className);\n  button.textContent = textContent;\n  button.addEventListener('click', callback);\n  return button;\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/templates/lightbox-element.js\n ** module id = 11\n ** module chunks = 0\n **/","var el = require('../dom.js').el;\n\nmodule.exports = function (imageTitle) {\n  var title = el('p');\n  title.textContent = imageTitle || 'Lightbox Demo Title';\n  return title;\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/templates/lightbox-title.js\n ** module id = 12\n ** module chunks = 0\n **/","var domTools = require('../dom.js');\nvar append = domTools.append;\nvar remove = domTools.remove;\nvar getWidth = domTools.getWidth;\n\n\nvar t = {\n  lightboxElement: require('../templates/lightbox-element.js'),\n  lightbox: require('../templates/lightbox.js'),\n  image: require('../templates/image.js')\n};\n\n\n// creates the lightbox DOM nodes and appends them to document.body\n// takes advantage of JS closures to handle adding and removing events\nvar lightboxView = function (imageNode, imageTitle, imageCollection) {\n  var shadowbox = t.lightboxElement('shadowbox', '', closeLightbox); \n  var lightbox = t.lightbox(imageTitle, imageNode, closeLightbox);\n  var backButton = t.lightboxElement('lightbox-back-button', '<', regress);\n  var forwardButton = t.lightboxElement('lightbox-forward-button', '>', progress);\n\n  append(document.body, shadowbox, backButton, forwardButton, lightbox);\n\n  position(); \n  window.onresize = position;\n  window.addEventListener('keydown', navigateOnKeyDown);\n\n  // repositions the lightbox and forward and back buttons\n  // needed to keep things centered and responsive\n  function position () {\n    var lightboxWidth = getWidth(lightbox);\n    var windowWidth = getWidth(document.body);\n    var backButtonWidth = getWidth(backButton);\n    var forwardButtonWidth = getWidth(forwardButton);\n    var margin = 20;\n\n    var lightboxLeft = (windowWidth - lightboxWidth) / 2;\n    lightbox.style.left = lightboxLeft;\n    backButton.style.left = lightboxLeft - backButtonWidth - 3 * margin;\n    forwardButton.style.left = lightboxLeft + lightboxWidth + margin;\n  };\n\n  // for easy keyboard naviation using the arrow keys\n  function navigateOnKeyDown (ev) {\n    var keys = {rightArrow: 39, leftArrow: 37};\n    if (ev.which === keys.rightArrow) {\n      progress();\n    } else if (ev.which === keys.leftArrow) {\n      regress();\n    }\n  };\n\n  // steps teh lightbox forwards in the collection\n  function progress  () {\n    for (var i = 0; i < imageCollection.length; i++) {\n      if (imageNode.id === imageCollection[i].id && i < imageCollection.length - 1) {\n        closeLightbox();\n        var image = imageCollection[i + 1];\n        lightboxView(\n            t.image(image.src, image.id),\n            image.title,\n            imageCollection\n            );\n        return;\n      }\n    }\n\n    closeLightbox();\n  };\n\n  // steps the lightbox backwards in the collection\n  function regress () {\n    for (var i = 0; i < imageCollection.length; i++) {\n      if (imageNode.id === imageCollection[i].id && i > 0) {\n        closeLightbox();\n        var image = imageCollection[i - 1];\n        lightboxView(t.image(image.src, image.id), image.title, imageCollection);\n        return;\n      }\n    }\n\n    closeLightbox();\n  };\n\n  // removes the lightbox-associated DOM nodes and removes the keydown listener\n  function closeLightbox () {\n    window.removeEventListener('keydown', navigateOnKeyDown);\n    remove(lightbox, backButton, forwardButton, shadowbox);\n  };\n};\n\nmodule.exports = lightboxView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/views/lightbox.js\n ** module id = 13\n ** module chunks = 0\n **/"],"sourceRoot":""}